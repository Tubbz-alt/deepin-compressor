/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.archive.mainwindow.monitor.xml -p monitorInterface
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MONITORINTERFACE_H
#define MONITORINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.archive.mainwindow.monitor
 */
class ComArchiveMainwindowMonitorInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.archive.mainwindow.monitor"; }

public:
    ComArchiveMainwindowMonitorInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComArchiveMainwindowMonitorInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> createSubWindow(const QStringList &urls)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(urls);
        return asyncCallWithArgumentList(QStringLiteral("createSubWindow"), argumentList);
    }

    inline QDBusPendingReply<bool> onSubWindowActionFinished(int mode, qlonglong pid, const QStringList &urls)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(mode) << QVariant::fromValue(pid) << QVariant::fromValue(urls);
        return asyncCallWithArgumentList(QStringLiteral("onSubWindowActionFinished"), argumentList);
    }

    inline QDBusPendingReply<bool> popUpChangedDialog(qlonglong pid)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(pid);
        return asyncCallWithArgumentList(QStringLiteral("popUpChangedDialog"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace archive {
    namespace mainwindow {
      typedef ::ComArchiveMainwindowMonitorInterface monitor;
    }
  }
}
#endif
